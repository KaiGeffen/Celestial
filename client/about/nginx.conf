# HTTP server - redirect to HTTPS
server {
    listen 80;
    server_name celestialdecks.gg www.celestialdecks.gg about.celestialdecks.gg;
    
    # Redirect all HTTP requests to HTTPS
    return 301 https://$server_name$request_uri;
}

# HTTPS server
server {
    listen 443 ssl http2;
    listen [::]:443 ssl http2;
    server_name celestialdecks.gg www.celestialdecks.gg about.celestialdecks.gg;

    # SSL configuration
    ssl_certificate /etc/ssl/certs/celestialdecks.crt;
    ssl_certificate_key /etc/ssl/private/celestialdecks.key;
    
    # Modern SSL configuration
    ssl_protocols TLSv1.2 TLSv1.3;
    ssl_ciphers ECDHE-RSA-AES256-GCM-SHA512:DHE-RSA-AES256-GCM-SHA512:ECDHE-RSA-AES256-GCM-SHA384:DHE-RSA-AES256-GCM-SHA384:ECDHE-RSA-AES256-SHA384;
    ssl_prefer_server_ciphers on;
    ssl_session_cache shared:SSL:10m;
    ssl_session_timeout 5m;
    
    # Security headers
    add_header Strict-Transport-Security "max-age=31536000; includeSubDomains; preload" always;
    add_header X-Content-Type-Options nosniff;
    add_header X-Frame-Options DENY;
    add_header X-XSS-Protection "1; mode=block";

    root /usr/share/nginx/html;
    index index.html;

    location / {
        try_files $uri $uri/ =404;
        add_header Cache-Control "public, no-cache";
    }

    # Properly serve static assets with caching
    location ~* \.(jpg|jpeg|png|gif|ico|css|js|mp4|webp|ogg|mp3|svg)$ {
        expires 1y;
        add_header Cache-Control "public, no-transform";
        add_header Vary Accept-Encoding;
    }
    
    # Enable gzip compression
    gzip on;
    gzip_vary on;
    gzip_min_length 1024;
    gzip_proxied any;
    gzip_comp_level 6;
    gzip_types
        text/plain
        text/css
        text/xml
        text/javascript
        application/json
        application/javascript
        application/xml+rss
        application/atom+xml
        image/svg+xml;
}

# Development server (keep for local development)
server {
    listen 8080;
    server_name localhost;

    root /usr/share/nginx/html;
    index index.html;

    location / {
        try_files $uri $uri/ =404;
        add_header Cache-Control "public, no-cache";
    }

    # Properly serve static assets with caching
    location ~* \.(jpg|jpeg|png|gif|ico|css|js|mp4|webp|ogg|mp3|svg)$ {
        expires 1y;
        add_header Cache-Control "public, no-transform";
    }
} 